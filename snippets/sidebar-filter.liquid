{% comment %}
snippets/sidebar-filter.liquid

Use the "defaultOpen" variable to determine if the filter will be
collapsed by default in the accordion.
{% endcomment %}

{%- for filter in collection.filters -%}
  {%- liquid

    assign defaultOpen = false
    assign accordion_content_id = accordion_content_class | append: block.id | append: '-' | append: forloop.index
    assign total_active_values = total_active_values | plus: filter.active_values.size

  -%}
  {% case filter.type %}
    {% when 'list' %}
      {%- liquid

        assign is_size_filter = false
        assign is_color_filter = false

        assign filter_label_to_lowercase = filter.label | downcase

        if filter_label_to_lowercase contains "color"
          assign is_color_filter = true
        elsif filter_label_to_lowercase contains "colour"
          assign is_color_filter = true
        elsif filter_label_to_lowercase contains "size"
          assign is_size_filter = true
        endif

        if is_color_filter
          assign filter_type = 'color'
          assign defaultOpen = false
        elsif is_size_filter
          assign filter_type = 'size'
          assign defaultOpen = false
        else
          assign filter_type = 'regular'
        endif

      -%}
        {% capture accordion_heading_capture %}
        {{ filter.label | escape }}
        {% endcapture %}
        {% capture accordion_content_capture %}
          <div class="sidebar-filter filter--{{ filter_type }}">
            <ul>
              {% for value in filter.values %}

                {%- liquid

                  for product in collection.products
                    unless is_color_filter
                      continue
                    endunless

                    for option in product.options_with_values
                      assign option_name = option.name | downcase

                      unless option_name contains "color" or option_name contains "colour"
                        continue
                      endunless

                      assign variant_img_url = null
                      assign swatch_color_name = value.label | handleize | downcase | append: '.png'
                      assign swatch_image_url = swatch_color_name | file_url
                      assign css_color = value.label | split: ' ' | last | downcase

                      if images[swatch_color_name] != blank
                        assign bg_img = 'background-image:url(' | append: swatch_image_url | append: ');'
                      else
                        assign bg_img = ''
                      endif
                      assign bg_color = 'background-color:' | append: css_color | append: ';'

                    endfor
                  endfor

                  if value.active
                    assign status = 'current'
                    assign url = value.url_to_remove
                  elsif value.count == 0 and value.active == false
                    assign status = 'disabled'
                    assign url = ''
                  else
                    assign status = ''
                    assign url = value.url_to_add
                  endif
                -%}

                <li class="{{ status }} {% unless is_color_filter %}checkbox-wrapper{% endunless %}">
                  {% if is_color_filter %}
                    <a class="js-collection-side-filter {{ status }}" href="{{ url }}" title="{{ value.label }}">
                      <input type="checkbox"
                                   name="{{ value.param_name }}"
                                   value="{{ value.value }}"
                                   {% if value.active %}checked{% endif %}
                                   {% if value.count == 0 and value.active == false %}disabled{% endif%} >
                      <span class="color-filter color-filter--rounded color-filter--{{ status }} {{ status }}" style="{{ bg_color }}{{ bg_img }}"></span>
                      <span class="color-filter--label">{{ value.label | escape }} <span class="filter__count">({{ value.count }})</span></span>
                    </a>
                  {% else %}
                    <a class="js-collection-side-filter {{ status }}" data-tag="{{ url }}" href="{{ url }}">
                      <input type="checkbox"
                                   name="{{ value.param_name }}"
                                   value="{{ value.value }}"
                                   {% if value.active %}checked{% endif %}
                                   {% if value.count == 0 and value.active == false %}disabled{% endif%} >
                      <div class="checkbox-indicator"></div>
                      <span class="regular-filter--label">{{ value.label | escape }} <span class="filter__count">({{ value.count }})</span></span>
                    </a>
                  {% endif %}
                </li>
              {% endfor %}

            </ul>
          </div>
        {% endcapture %}
    {% when 'price_range' %}
      {%- liquid
        assign currencies_using_comma_decimals = "ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND" | split: ','
        assign uses_comma_decimals = false

        if currencies_using_comma_decimals contains cart.currency.iso_code
          assign uses_comma_decimals = true
        endif
      -%}

        {% capture accordion_heading_capture %}
        {{ filter.label | escape }}
        {% endcapture %}
        {% capture accordion_content_capture %}
        <div class="sidebar-filter filter--price-range" data-collection-filters-price-range>
          <div class="filter-range__boxes js-price-range">
            <div class="filter-range__field">
              <label class="filter-range__field__label visually-hidden" for="Filter-{{ filter.label | escape }}-{{ forloop.index }}">{{ 'sections.collection_template.from' | t }}</label>
              <span class="filter-range__field__currency">{{ cart.currency.symbol }}</span>
              <input class="filter-range__field__input js-filter-range-input js-price-min-output"
                name="{{ filter.min_value.param_name }}"
                id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                {%- if filter.min_value.value -%}
                  {%- if uses_comma_decimals -%}
                    value="{{ filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                  {%- else -%}
                    value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                  {% endif %}
                {%- endif -%}
                type="number"
                placeholder="{{ 'sections.collection_template.from' | t }}"
                min="0"
                max="{{ filter.range_max | money_without_currency | replace: ',', '' }}">
              </input>
            </div>
            <div class="filter-range__field">
              <label class="filter-range__field__label visually-hidden" for="Filter-{{ filter.label | escape }}-{{ forloop.index }}">{{ 'sections.collection_template.to' | t }}</label>
              <span class="filter-range__field__currency">{{ cart.currency.symbol }}</span>
              <input class="filter-range__field__input js-filter-range-input js-price-max-output"
                name="{{ filter.max_value.param_name }}"
                id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                {%- if filter.max_value.value -%}
                  {%- if uses_comma_decimals -%}
                    value="{{ filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                  {%- else -%}
                    value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                  {% endif %}
                {%- endif -%}
                type="number"
                placeholder="{{ 'sections.collection_template.to' | t }}"
                min="0"
                max="{{ filter.range_max | money_without_currency | replace: ',', '' }}">
              </input>
            </div>

            <div class="filter-range__slider--wrapper">
              <input class="filter-range__slider--input"
                {%- if filter.min_value.value -%}
                  {%- if uses_comma_decimals -%}
                    value="{{ filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                  {%- else -%}
                    value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                  {% endif %}
                {%- else -%}
                  value="0"
                {%- endif -%}
                min="0"
                max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                step="1.00"
                type="range"/>
              <input class="filter-range__slider--input"
                {%- if filter.max_value.value -%}
                  {%- if uses_comma_decimals -%}
                    value="{{ filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                  {%- else -%}
                    value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                  {% endif %}
                {%- else -%}
                  value="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                {%- endif -%}
                min="0"
                max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                step="1.00"
                type="range"/>
            </div>
          </div>
        </div>
      {% endcapture %}
  {% endcase %}

  <li class="js-accordion-header c-accordion__header {% if defaultOpen %}js-accordion-is-open{% endif %}"
        {% if defaultOpen %}
          aria-expanded="true"
        {% else %}
          aria-expanded="false"
        {% endif %}
        aria-controls="{{ accordion_content_id }}" data-toggle="accordion"
        data-accordion-context="{{ block.id }}"
        {{ block.shopify_attributes }} >
    <a class="js-accordion-link c-accordion__link" href="" rel="nofollow"><h4>{{ accordion_heading_capture }}</h4></a>
    <button class="dropdown-arrow" aria-label="{{  link.title | escape }}" data-toggle="accordion" aria-expanded="false" aria-controls="{{ accordion_content_id }}" >
      {% render 'snip-icons',
         wrapper: '.c-accordion__header',
         type: 'apollo',
         icon: 'down-carrot',
         classes: 'c-accordion__header--icon vib-center',
         size: '6px',
         fill: 'var(--text-color)',
         hover: 'var(--text-color)' %}
    </button>
  </li>

   <li class="c-accordion__panel {% if defaultOpen %}is-active{% endif %} {{ accordion_content_id }} c-accordion__panel--{{ block.type }}"
     id="{{ accordion_content_id }}"
     data-parent="#c-accordion--{{ unique_id }}"
     data-accordion-context="{{ block.id }}">
    <div class="c-accordion__inner">
     {{ accordion_content_capture }}
    </div>
  </li>
{%- endfor -%}
